spring.application.name=Shopping-Cart-Service
info.app.version=@project.version@
server.port=0

spring.profiles.active=local

spring.output.ansi.enabled=always

# Eureka Configuration
eureka.client.service-url.default-zone=${EUREKA_SERVER}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# DATABASE CONFIG
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.sql.init.mode=always

# JPA CONFIG
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_SERVER}
spring.kafka.consumer.group-id=emporium-shopping-cart-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# API-DOC
springdoc.api-docs.path=/api-emporium-shopping-cart
springdoc.swagger-ui.path=/api-emporium-shopping-cart.html
